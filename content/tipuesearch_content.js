var tipuesearch = {"pages": [{'title': 'About', 'text': 'This is  https://github.com/mdecourse/cmstemplate \n', 'tags': '', 'url': 'About.html'}, {'title': 'Stage1', 'text': '', 'tags': '', 'url': 'Stage1.html'}, {'title': 'WEEK1', 'text': '1.在小黑框中輸入leo\xa0 啟動 Leo Editor \n \n 2. 點選左上方file-open-outline-尋找pelican.leo檔案(若是沒有須自己建) \n \n 3.進入@path markdown的地方進行資料更改 \n ctrl+I是建立分頁 ctrl+R是建立另一主題 \n \n 4.進入Pelican 設定-@edit publishconf.py進行資料更改 \n \n 5.將資料更改完成即可進行推送 \n', 'tags': '', 'url': 'WEEK1.html'}, {'title': 'WEEK2', 'text': '與組員討論組題為倒車入庫，並完成第二周進度繪製零件圖並放入coppeliasim進行色調調整 \n https://youtu.be/Ycw1Y1WBLEk \n \n', 'tags': '', 'url': 'WEEK2.html'}, {'title': 'WEEK3', 'text': 'coppelia sim (V-rep)導入模型並模擬 \n 1.開啟 coppelia sim 點選 File-Import -Mesh... ，導入模型檔案(小組繪製模型為STL檔) \n \n 2.將導入的模型依照旗子母關係擺放 \n \n 3.新增節點，右鍵點選車輪 -Add -Joint - Revolute \n \n 4.將Joint移動至輪胎與輪軸銜接處 \n 5.調整車子設定，在零件的圖示上 用左鍵快速點及兩下 -點選 show dynamic properties dialog - 勾選 Body is respondable 和 Body is dynamic ( 車身和車輪 ) \n \n 6.調整Joint設定，在零件的圖示上 用左鍵快速點及兩下 -點選 show dynamic properties dialog - 勾選 Motor enabled 並給定速度 \n \n 7.調整後按下star simulation 進行模擬 \n \n', 'tags': '', 'url': 'WEEK3.html'}, {'title': 'WEEK4', 'text': '預定進度:上台報告 \n \n \n \n \n 討論 \n 要將各組的影片進行分類並且計算各組報告時間， \n 可手動計算也可利用程式分析ex:python count mp4 time \n', 'tags': '', 'url': 'WEEK4.html'}, {'title': 'Stage2', 'text': '', 'tags': '', 'url': 'Stage2.html'}, {'title': 'WEEK5', 'text': '我們這次的專案，決定以上一次未完成的排球扣球練習器進行改良；原本的主體只有單一的骨架與球軌，我們將改良成雙向作動與作動時間長的機構，讓排球可以順利滑動；並改良夾持的機構，改良成讓球在圓盤滾動一段時間後，球體的中心滑動到圓盤的中心點後自動掉落 \n 預定每週進度 \n W5 討論專題方向、 \n 每週進度 W6 繪製零件圖、在coppeliasim進行模擬並修正錯誤 \n W7 在coppeliasim進行模擬並修正錯誤、進行Heroku協統 \n W8 修正零件圖、在coppeliasim進行模擬並修正錯誤、準備pdf、製作reavel並分配上台報告內容 W9 上台報告 \n', 'tags': '', 'url': 'WEEK5.html'}, {'title': 'WEEK6', 'text': '預定進度:繪製零件圖、在coppeliasim進行模擬並修正錯誤 \n 骨架、球軌、接住球的部分 \n \n 轉盤及支撐軸，透過轉盤週期作旋轉動作讓球也成週期落下 \n \n 發球器組合圖 \n \n 組合圖 \n \n', 'tags': '', 'url': 'WEEK6.html'}, {'title': 'WEEK7', 'text': '1. 建立 Heroku 帳號，並且登記後要進入 @gm 帳號進行確認後才能開通 Heroku 帳號. \n \n 2. 建立 Heroku app \n 3. 下載 Heroku CLI \n 4. 修改命令搜尋路徑 \n \n 5. 以 git 進行提交推送 \n 先在小黑窗登入 \n heroku login \xa0 - i \n 再推送資料 \n heroku git:remote \xa0 - a\xa0 \n \xa0 \n', 'tags': '', 'url': 'WEEK7.html'}, {'title': 'WEEK8', 'text': 'coppeliasim進行模擬後發現轉盤太小會造成球一樣滾動因此將圓盤直徑加大 \n \n 模擬後發現須將底座挖圓盤軸的洞，不然組合圖放入coppeliasim時會自動視為一體，會導致無法驅動 \n 實際作動影片 \n \n', 'tags': '', 'url': 'WEEK8.html'}, {'title': 'WEEK9', 'text': '預定進度:上台報告 \n \n \n', 'tags': '', 'url': 'WEEK9.html'}, {'title': 'Stage3', 'text': '', 'tags': '', 'url': 'Stage3.html'}, {'title': 'WEEK10', 'text': '將stage2的資料作總整理 彙整至\xa0 https://github.com/mdecourse/cd2021/discussions/13 \n 進行stage3分組，創建網頁協同 site \n', 'tags': '', 'url': 'WEEK10.html'}, {'title': 'WEEK11', 'text': '1.建立新倉儲 \n \n 2.倉儲建立完成後，邀請別人進行協同 \n \n 3.將小組網頁資料下載 \n \n 4.下載完成後，更改config內容，將原本自己學號的網址改成原本倉儲的擁有者 \n \n 5.倉儲設定完成 \n \n \n \n', 'tags': '', 'url': 'WEEK11.html'}, {'title': 'WEEK12', 'text': '利用task1抽取學員，來進行直播 以小組的專題方向進行繪圖 \n', 'tags': '', 'url': 'WEEK12.html'}]};