<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<h1>Stage1</h1>
<h2>WEEK1</h2>
<p>1.在小黑框中輸入leo  啟動<span>Leo Editor</span></p>
<p><img alt="" height="209" src="/images/螢幕擷取畫面 2021-03-03 215200.jpg" width="400"/></p>
<p>2.<span>點選左上方file-open-outline-尋找pelican.leo檔案(若是沒有須自己建)</span></p>
<p><img alt="" height="213" src="/images/螢幕擷取畫面 2021-03-03 215306.jpg" width="400"/></p>
<p>3.進入@path markdown的地方進行資料更改</p>
<p>ctrl+I是建立分頁 ctrl+R是建立另一主題</p>
<p><img alt="" height="101" src="/images/螢幕擷取畫面 2021-03-03 215644.jpg" width="400"/></p>
<p>4.進入Pelican 設定-@edit publishconf.py進行資料更改</p>
<p><img alt="" height="177" src="/images/螢幕擷取畫面 2021-03-03 215744.jpg" width="400"/></p>
<p>5.將資料更改完成即可進行推送</p>
<h2>WEEK2</h2>
<p>與組員討論組題為倒車入庫，並完成第二周進度繪製零件圖並放入coppeliasim進行色調調整</p>
<p><a href="https://youtu.be/Ycw1Y1WBLEk">https://youtu.be/Ycw1Y1WBLEk</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Ycw1Y1WBLEk" width="560"></iframe></p>
<h2>WEEK3</h2>
<p><span>coppelia sim (V-rep)導入模型並模擬</span></p>
<p><span>1.開啟<span>coppelia sim 點選 File-Import -Mesh... ，導入模型檔案(小組繪製模型為STL檔)</span></span></p>
<p><span><img alt="" height="285" src="/images/螢幕擷取畫面 2021-03-16 210929.jpg" width="340"/></span></p>
<p><span>2.將導入的模型依照旗子母關係擺放</span></p>
<p><span><img alt="" height="315" src="/images/螢幕擷取畫面 2021-03-16 210556.jpg" width="302"/></span></p>
<p><span>3.新增節點，右鍵點選車輪 -Add -Joint - Revolute</span></p>
<p><span><img alt="" height="359" src="/images/螢幕擷取畫面 2021-03-16 211035.jpg" width="355"/></span></p>
<p><span>4.將Joint移動至輪胎與輪軸銜接處</span></p>
<p><span>5.調整車子設定，在零件的圖示上 用左鍵快速點及兩下 -點選 show dynamic properties dialog - 勾選 Body is respondable 和 Body is dynamic (<span>車身和車輪</span><span>)</span></span></p>
<p><img alt="" height="427" src="/images/螢幕擷取畫面 2021-03-16 211246.jpg" width="800"/></p>
<p><span>6.調整Joint設定，在零件的圖示上 用左鍵快速點及兩下 -點選 show dynamic properties dialog - 勾選 Motor enabled 並給定速度</span></p>
<p><span><img alt="" height="430" src="/images/螢幕擷取畫面 2021-03-16 211516.jpg" width="800"/></span></p>
<p><span>7.調整後按下star simulation 進行模擬</span></p>
<p><img alt="" height="47" src="/images/螢幕擷取畫面 2021-03-16 211720.jpg" width="321"/></p>
<h2>WEEK4</h2>
<p>預定進度:上台報告</p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0fUVV5MkJgw" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>討論</p>
<p>要將各組的影片進行分類並且計算各組報告時間，</p>
<p>可手動計算也可利用程式分析ex:python count mp4 time</p>
<h1>Stage2</h1>
<h2>WEEK5</h2>
<p>我們這次的專案，決定以上一次未完成的排球扣球練習器進行改良；原本的主體只有單一的骨架與球軌，我們將改良成雙向作動與作動時間長的機構，讓排球可以順利滑動；並改良夾持的機構，改良成讓球在圓盤滾動一段時間後，球體的中心滑動到圓盤的中心點後自動掉落</p>
<p>預定每週進度</p>
<p>W5 討論專題方向、</p>
<p>每週進度 W6 繪製零件圖、在coppeliasim進行模擬並修正錯誤</p>
<p>W7 在coppeliasim進行模擬並修正錯誤、進行Heroku協統</p>
<p>W8 修正零件圖、在coppeliasim進行模擬並修正錯誤、準備pdf、製作reavel並分配上台報告內容 W9 上台報告</p>
<h2>WEEK6</h2>
<p>預定進度:繪製零件圖、在coppeliasim進行模擬並修正錯誤</p>
<p><span>骨架、球軌、接住球的部分</span></p>
<p><span><img alt="" height="431" src="/images/底座.jpg" width="550"/></span></p>
<p><span>轉盤及支撐軸，透過轉盤週期作旋轉動作讓球也成週期落下</span></p>
<p><span><img alt="" height="705" src="/images/轉盤.jpg" width="508"/></span></p>
<p><span>發球器組合圖</span></p>
<p><span><img alt="" height="466" src="/images/發球氣.jpg" width="349"/></span></p>
<p><span>組合圖</span></p>
<p><span><img alt="" height="375" src="/images/第一版.jpg" width="600"/></span></p>
<h2>WEEK7</h2>
<p><span>1.<span>建立 Heroku 帳號，並且登記後要進入 @gm 帳號進行確認後才能開通 Heroku 帳號.</span></span></p>
<p><span><img alt="" height="284" src="/images/螢幕擷取畫面 2021-04-08 170306.jpg" width="598"/></span></p>
<p>2.<span>建立 Heroku app</span></p>
<p>3.<span>下載 Heroku CLI</span><img alt="" height="273" src="/images/螢幕擷取畫面 2021-04-08 170900.jpg" width="598"/></p>
<p><span>4.</span><span>修改命令搜尋路徑</span></p>
<p><span><img alt="" height="546" src="/images/螢幕擷取畫面 2021-04-09 093149.jpg" width="598"/></span></p>
<p>5.<span>以 git 進行提交推送</span></p>
<div class="line number1 index0 alt2"><span face="monospace">先在小黑窗登入</span></div>
<div class="line number2 index1 alt1"><code class="py plain">heroku login<span> </span></code><code class="py keyword">-</code><code class="py plain">i</code></div>
<div class="line number3 index2 alt2"><code class="py comments">再推送資料</code></div>
<div class="line number4 index3 alt1"><code class="py plain">heroku git:remote<span> </span></code><code class="py keyword">-</code><code class="py plain">a </code></div>
<p><span> </span></p>
<h2>WEEK8</h2>
<p>coppeliasim進行模擬後發現轉盤太小會造成球一樣滾動因此將圓盤直徑加大</p>
<p><img alt="" height="651" src="/images/轉盤變大.jpg" width="545"/></p>
<p><span>模擬後發現須將底座挖圓盤軸的洞，不然組合圖放入coppeliasim時會自動視為一體，會導致無法驅動</span><img alt="" height="736" src="/images/底座打洞.jpg" width="613"/></p>
<p>實際作動影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Rzcg0QOfQDo" title="YouTube video player" width="560"></iframe></p>
<h2>WEEK9</h2>
<p>預定進度:上台報告</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/AxeEnNRNzdM" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>Stage3</h1>
<h2>WEEK10</h2>
<p>將stage2的資料作總整理 彙整至 <a href="https://github.com/mdecourse/cd2021/discussions/13">https://github.com/mdecourse/cd2021/discussions/13</a></p>
<p>進行stage3分組，創建網頁協同<a href="https://40823106.github.io/stage3-ag2/content/index.html">site</a></p>
<h2>WEEK11</h2>
<p>1.建立新倉儲</p>
<p><img alt="" height="322" src="/images/螢幕擷取畫面 2021-05-12 154219.jpg" width="600"/></p>
<p>2.倉儲建立完成後，邀請別人進行協同</p>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2021-05-12 154522.jpg" width="600"/></p>
<p>3.將小組網頁資料下載</p>
<p><img alt="" height="327" src="/images/messageImage_1619678554533.jpg" width="600"/></p>
<p>4.下載完成後，更改config內容，將原本自己學號的網址改成原本倉儲的擁有者</p>
<p><img alt="" height="485" src="/images/messageImage_1619678580723.jpg" width="400"/></p>
<p>5.倉儲設定完成</p>
<p><img alt="" height="63" src="/images/messageImage_1619678768807.jpg" width="300"/></p>
<p><img alt="" height="309" src="/images/螢幕擷取畫面 2021-04-29 144632_0.jpg" width="600"/></p>
<p></p>
<h2>WEEK12</h2>
<p>利用task1抽取學員，來進行直播 以小組的專題方向進行繪圖</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/agDcxHvB5aI" title="YouTube video player" width="560"></iframe></p>
<h2>WEEK13</h2>
<p>遠距離上課第一周，小組利用google meeting進行小組會議 <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/iGsSeNGheeY" title="YouTube video player" width="560"></iframe></p>
<h2>WEEK14</h2>
<p>建立gitlab</p>
<p>1.搜尋gitlab sign up 點選第一個選項 GitLab.com account</p>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2021-06-02 230907.jpg" width="600"/></p>
<p>2.填選個人資料(若是出現帳號已創建，可以先試著登陸看看，採用更改密碼的方式)<img alt="" height="321" src="/images/螢幕擷取畫面 2021-06-02 232142.jpg" width="600"/></p>
<p>3.登入-Edit profile-<span>SSH Keys</span></p>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2021-06-02 232609.jpg" width="600"/></p>
<p>5.<span>打開puttygen.exe選load選取檔案</span></p>
<p><img alt="" height="417" src="/images/螢幕擷取畫面 2021-06-02 232706.jpg" width="600"/></p>
<p>6.選取ppk</p>
<p><img alt="" height="376" src="/images/螢幕擷取畫面 2021-06-02 232720.jpg" width="600"/></p>
<p>7.複製鑰使串至網頁貼上</p>
<p><img alt="" height="131" src="/images/螢幕擷取畫面 2021-06-02 232741.jpg" width="607"/></p>
<p><img alt="" height="321" src="/images/螢幕擷取畫面 2021-06-02 232812.jpg" width="600"/></p>
<p>8.<span>在編輯器開啟tmp/cd2021/.git/config修改 並推送</span></p>
<p><img alt="" height="906" src="/images/螢幕擷取畫面 2021-06-02 233137.jpg" width="692"/></p>
<p>9.cd tmp - cd cd2021 - git remoted add - git push gitlab</p>
<h2>WEEK15</h2>
<p>1.因為有取多同學帳號遭到封鎖，老師在課堂中講解除了利用gitlab也可以用 Fossil SCM 進行設計內容</p>
<ol>
<li>在 https://fossil.kmol.info:3443 中申請帳號</li>
<li>建立一個空的倉儲 cd2021</li>
<li>進入可攜系統中cd2021 輸入 git remote add fossil<span> </span><a href="http://fossil.kmol.inof:3000/%E5%B8%B3%E8%99%9F/cd2021.git">http://fossil.kmol.inof:3000/帳號/cd2021.git</a></li>
<li>git push fossil 即可成功</li>
</ol>
<p>2.進行影片翻譯</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>翻譯如下:</p>
<p>Here we have the same two link robot as we just looked at but this time we're going to solve it using an analytical approach, that is we're going to rely much more on algebra, particular linear algebra rather than geometry.</p>
<p>在這裡，我們有與剛才看到的相同的二連桿機構，但這次我們將使用分析方法來解決它，也就是說，我們將更多地依賴代數，特定的線性代數而不是幾何。</p>
<p><span></span></p>
<p><span> </span>We have an expression E, which is the homogeneous transformation which represents the pose of the robots endefector and we looked at this in the last lecture, we can write the endefector pose as a sequence of elementary homogeneous transformations.</p>
<p>我們有一個表達式<span><span> </span>E</span>，它是表示機械手臂位置的齊次變換，我們在上一課中看過這個，我們可以將機械手臂位置寫為一系列基本齊次變換。</p>
<p><span> </span></p>
<p>A rotation by q1, a translation along the X direction by a1, a rotation by q2 and then a translation in the X direction by a2.</p>
<p><span>q1</span>旋轉，a<span>1</span>沿<span>x</span>方向平移，q<span>2</span>旋轉，然後a<span>2</span>沿<span>x</span>方向平移。</p>
<p><span> </span></p>
<p>If I expand this out, multiply all the transformations together, I get the expression shown here ; a three by three homogeneous transformation matrix representing the pose of the robot's endefector.</p>
<p>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式；一個三乘三的齊次變換矩陣，表示機械手臂的最終位置。</p>
<p><span> </span></p>
<p>Now for this particular two link robot , we are only interested in the position of its endefector , it's X and Y co - ordinate and they are these two elements within the homogeneous transformation matrix , so I'm going to copy those out .</p>
<p>現在對於這個特殊的二連桿機構，我們只對它機械手臂的位置感興趣，它是<span>x</span>和<span>y</span>坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來。</p>
<p><span> </span></p>
<p>So here again is our expression for X and Y and what we're going to do is a fairly common trick , we're going to square and add these two equations and I get a relationship that looks like this .</p>
<p>所以這裡又是我們對<span>x</span>和<span>y</span>的表達式，我們要做的是一個相當常見的技巧，我們要平方並添加這兩個方程，我得到一個看起來像這樣的關係式。</p>
<p><span></span></p>
<p><span> </span>Now I can solve for the joint angle q2 in terms of the endefector pose X and Y and the robot's constants a1 and a2.</p>
<p>現在我可以根據機械手臂位置<span>x</span>和<span>y</span>以及機器人的常數a<span>1</span>和a<span>2</span>來求解節點角度q<span>2</span>。</p>
<p><span> </span></p>
<p>Now what I'm going to do is apply the sum of angles identity .</p>
<p>現在我要做的是應用角度之和的特性。</p>
<p></p>
<p>I'm going to expand these terms, sin of q1 plus q2 or cos of q1 plus q2 and to make life a little bit easier, I'm going to make some substations, so where ever I had cos q2, I'm going to write c2 and where ever I had sine q2, I'm going to write s2.</p>
<p>我將展開這些項，sinq1+q<span>2</span>或<span>cosq1+</span>q<span>2</span>，為了讓生活更輕鬆一點，我將建立一些部份，所以只要有<span>cosq2</span>，我就會去取代c<span>2</span>並且在我有<span>sinq2<span> </span></span>的地方，取代為s<span>2</span>。</p>
<p><span> </span></p>
<p>It's a fairly common shorthand when people are looking at robot kinematic equations. And here are the equations after making those substitutions.</p>
<p>當人們解決機器人運動學方程時，這是一個相當常見的快速記法。這是進行這些替換後的方程式。</p>
<p><span> </span></p>
<p>Looking at these two equations, I can see that they fall into a very well known form and for that form there is a very well known solution.</p>
<p>看看這兩個方程，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個眾所周知的解決方案。</p>
<p><span> </span></p>
<p>So I'm going to consider just one of the equations, the equation for Y and using our well known identity and it's solution, I can determine the values for the variables little a, little b and little c and once l've determined those, then I can just write down the solution for q1, which x is the equivalent of theta in this particular case.</p>
<p>所以我將只考慮其中一個方程式<span>Y</span>，使用我們眾所周知的恆等式和它的解，我可以確定變量<span>a</span>、<span>b</span>、<span>c<span> </span></span>的值，一旦我確定了這些，然後我可以寫下q<span>1</span>的解決方案，在這種特殊情況下，<span>x</span>相當於θ。</p>
<p><span> </span></p>
<p>Here again is our expression for q1, copied over from the previous slide and we may remember from earlier in our workings that we determined this particular relationship; X squared plus Y squared is equal to this particular complex expression.</p>
<p>這裡再次是我們對q<span>1</span>的表達式，從上一張幻燈片複製過來，我們可能還記得在我們工作的早期，我們確定了這種特殊關係；<span>X<sup>2+</sup></span><span>Y<sup>2</sup></span>等於這個特定的複雜表達式。</p>
<p><span> </span></p>
<p>So I can substitute that in and do some simplification and I end up with this slightly less complex expression for q1.</p>
<p>因此，我可以將其替換並進行一些簡化，最終得到q1的這個稍微不那麼複雜的表達式。</p>
<p><strong><span> </span></strong></p>
<p>And it is the same expression that I got following the geometric approach in the previous section.</p>
<p>這與我在上一節中遵循幾何方法得到的表達式相同。</p>
<p><img alt="" height="241" src="/images/螢幕擷取畫面 2021-06-14 142424.jpg" width="518"/></p><h2>WEEK16</h2>
<p>1.<span>Onshape 零組件繪製</span></p>
<p><span>點選所繪製的零件-匯出</span></p>
<p><img alt="" height="792" src="/images/螢幕擷取畫面 2021-06-16 203657.jpg" width="366"/></p>
<p>並將檔案設定為STL檔-單位為mm-解析度為精細</p>
<p><img alt="" height="476" src="/images/螢幕擷取畫面 2021-06-16 204124.jpg" width="500"/></p>
<p><span>圖檔連結:</span><br/><a href="https://cad.onshape.com/documents/15e83407d80dfa73cd0a79b4/w/708c36c519f886a7cf619237/e/8ab38e3393432ffc8ab92eae" rel="nofollow">https://cad.onshape.com/documents/15e83407d80dfa73cd0a79b4/w/708c36c519f886a7cf619237/e/8ab38e3393432ffc8ab92eae</a></p>
<p>2.<span>建立 CoppeliaSim 4.1.0 MTB robot 場景</span></p>
<p><span>選擇File-Import-Mesh將檔案匯入</span></p>
<p><span><img alt="" height="285" src="/images/螢幕擷取畫面 2021-06-16 204831.jpg" width="342"/></span></p>
<p><span>選擇Edit-Grouping-Divide selected shapes 將檔案拆解方便定位軸</span></p>
<p><span><img alt="" height="262" src="/images/螢幕擷取畫面 2021-06-16 204951.jpg" width="300"/></span></p>
<p><span>點選零件Add-Comvex hull of selection將檔案曲線精密化</span></p>
<p><img alt="" height="367" src="/images/螢幕擷取畫面 2021-06-16 205144.jpg" width="400"/></p>
<p>點選零件-toggle shape 進行零件區域選取-選完點extract shape</p>
<p>這個方法可以將物件拆解產生新的區域</p>
<p><img alt="" height="355" src="/images/螢幕擷取畫面 2021-06-16 205657.jpg" width="500"/></p>
<p>先點軸-再點物體-點選移動物件-再點Position進行軸的定位</p>
<p><img alt="" height="561" src="/images/螢幕擷取畫面 2021-06-16 210049.jpg" width="500"/></p>
<p><span>Force sensor是一個力傳感器可以同時測出三個方向和力矩</span></p>
<p><img alt="" height="397" src="/images/螢幕擷取畫面 2021-06-16 210416.jpg" width="278"/></p>
<p><img alt="" height="158" src="/images/螢幕擷取畫面 2021-06-16 210526.jpg" width="200"/></p>
<p>Revolute-選轉的軸</p>
<p>Prismatic-上下移動的軸</p>
<p><img alt="" height="408" src="/images/螢幕擷取畫面 2021-06-16 210707.jpg" width="445"/></p>
<p>grippers可以點選吸盤</p>
<p><img alt="" height="600" src="/images/螢幕擷取畫面 2021-06-16 210930.jpg" width="122"/></p>
<p>Cuboid為長方體</p>
<p><img alt="" height="432" src="/images/螢幕擷取畫面 2021-06-16 211104.jpg" width="428"/></p>
<p><span>2.建立 CoppeliaSim 4.1.0 MTB robot 場景</span><br/><span>影片連結:</span><br/><a href="https://youtu.be/1oJov8iJlvw" rel="nofollow">https://youtu.be/1oJov8iJlvw</a><br/><span>W16_exam雲端連結:</span><br/><a href="https://drive.google.com/drive/folders/1xdaI_OUvxgJNPPZhEz4KEd7s1sIHOJBq?usp=sharing" rel="nofollow">https://drive.google.com/drive/folders/1xdaI_OUvxgJNPPZhEz4KEd7s1sIHOJBq?usp=sharing</a></p>
<p>鍵盤控制的部分沒有完成，只有建立場景，鍵盤控制的程式碼還需要時間研究<br/><span>3.手臂末端加入 components-gripper-suction pad 吸盤</span><br/><span>影片連結<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Y8DhAFJCE68" title="YouTube video player" width="560"></iframe><br/></span></p>
<p><span>4.逆向運動學函式</span><br/><span>影片連結:<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/uMLSgMTuc9o" title="YouTube video player" width="560"></iframe></span></p>
<div>
<div class="syntaxhighlighter lua" id="highlighter_681">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="lua keyword">function</code> <code class="lua plain">moving(x,y)</code></div>
<div class="line number2 index1 alt1"><code class="lua spaces">    </code><code class="lua plain">a=0.5</code></div>
<div class="line number3 index2 alt2"><code class="lua spaces">    </code><code class="lua plain">b=0.5</code></div>
<div class="line number4 index3 alt1"><code class="lua spaces">    </code><code class="lua plain">c=</code><code class="lua functions">math.pow</code><code class="lua plain">((</code><code class="lua functions">math.pow</code><code class="lua plain">(x,2)+</code><code class="lua functions">math.pow</code><code class="lua plain">(y,2)),0.5)</code></div>
<div class="line number5 index4 alt2"><code class="lua spaces">    </code><code class="lua plain">s=(a+b+c)/2</code></div>
<div class="line number6 index5 alt1"><code class="lua spaces">    </code><code class="lua plain">area=</code><code class="lua functions">math.pow</code><code class="lua plain">((s*(s-a)*(s-b)*(s-c)),0.5)</code></div>
<div class="line number7 index6 alt2"><code class="lua spaces">    </code><code class="lua plain">h=area/(2*c)</code></div>
<div class="line number8 index7 alt1"><code class="lua spaces">    </code><code class="lua plain">deg1_base=</code><code class="lua functions">math.atan</code><code class="lua plain">(x/y)</code></div>
<div class="line number9 index8 alt2"><code class="lua spaces">    </code><code class="lua keyword">if</code> <code class="lua plain">x&lt;0 </code><code class="lua keyword">and</code> <code class="lua plain">y&lt;0 </code><code class="lua keyword">then</code></div>
<div class="line number10 index9 alt1"><code class="lua spaces">        </code><code class="lua plain">deg1_base=deg1_base+</code><code class="lua functions">math.pi</code></div>
<div class="line number11 index10 alt2"><code class="lua spaces">    </code><code class="lua keyword">end</code></div>
<div class="line number12 index11 alt1"><code class="lua spaces">    </code><code class="lua plain">deg1_tri=</code><code class="lua functions">math.asin</code><code class="lua plain">(h/a)</code></div>
<div class="line number13 index12 alt2"><code class="lua spaces">    </code><code class="lua plain">deg1=deg1_base+deg1_tri</code></div>
<div class="line number14 index13 alt1"><code class="lua spaces">    </code><code class="lua plain">deg2=</code><code class="lua functions">math.pi</code><code class="lua plain">-(0.5*</code><code class="lua functions">math.pi</code><code class="lua plain">-deg1_tri)-</code><code class="lua functions">math.acos</code><code class="lua plain">(h/b)</code></div>
<div class="line number15 index14 alt2"><code class="lua spaces">    </code><code class="lua plain">deg3=deg2-deg1</code></div>
<div class="line number16 index15 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(AB,deg1)</code></div>
<div class="line number17 index16 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(BC,-deg2)</code></div>
<div class="line number18 index17 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(CD,deg3)</code></div>
<div class="line number19 index18 alt2"><code class="lua keyword">end</code></div>
<div class="line number20 index19 alt1"> </div>
<div class="line number21 index20 alt2"><code class="lua keyword">function</code> <code class="lua plain">sysCall_threadmain()</code></div>
<div class="line number22 index21 alt1"><code class="lua spaces">    </code><code class="lua plain">t=3</code></div>
<div class="line number23 index22 alt2"><code class="lua spaces">    </code><code class="lua plain">AB=sim.getObjectHandle(</code><code class="lua string">'AB'</code><code class="lua plain">)</code></div>
<div class="line number24 index23 alt1"><code class="lua spaces">    </code><code class="lua plain">BC=sim.getObjectHandle(</code><code class="lua string">'BC'</code><code class="lua plain">)</code></div>
<div class="line number25 index24 alt2"><code class="lua spaces">    </code><code class="lua plain">CD=sim.getObjectHandle(</code><code class="lua string">'CD'</code><code class="lua plain">)</code></div>
<div class="line number26 index25 alt1"><code class="lua spaces">    </code><code class="lua plain">Z=sim.getObjectHandle(</code><code class="lua string">'Z'</code><code class="lua plain">)</code></div>
<div class="line number27 index26 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(AB,0)</code></div>
<div class="line number28 index27 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(BC,0)</code></div>
<div class="line number29 index28 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(CD,0)</code></div>
<div class="line number30 index29 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(Z,0)</code></div>
<div class="line number31 index30 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number32 index31 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.setIntegerSignal(</code><code class="lua string">"pad_switch"</code><code class="lua plain">,1)</code></div>
<div class="line number33 index32 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(Z,-0.09)</code></div>
<div class="line number34 index33 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number35 index34 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(Z,0)</code></div>
<div class="line number36 index35 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number37 index36 alt2"><code class="lua spaces">    </code><code class="lua plain">moving(0.2,0.7)</code></div>
<div class="line number38 index37 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number39 index38 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setIntegerSignal(</code><code class="lua string">"pad_switch"</code><code class="lua plain">,0)</code></div>
<div class="line number40 index39 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number41 index40 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setIntegerSignal(</code><code class="lua string">"pad_switch"</code><code class="lua plain">,1)</code></div>
<div class="line number42 index41 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number43 index42 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(Z,-0.09)</code></div>
<div class="line number44 index43 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number45 index44 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setJointTargetPosition(Z,0)</code></div>
<div class="line number46 index45 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)</code></div>
<div class="line number47 index46 alt2"><code class="lua spaces">    </code><code class="lua plain">moving(-0.3,-0.55)</code></div>
<div class="line number48 index47 alt1"><code class="lua spaces">    </code><code class="lua plain">sim.wait(t)   </code></div>
<div class="line number49 index48 alt2"><code class="lua spaces">    </code><code class="lua plain">sim.setIntegerSignal(</code><code class="lua string">"pad_switch"</code><code class="lua plain">,0)</code></div>
<div class="line number50 index49 alt1"><code class="lua spaces">    </code> </div>
<div class="line number51 index50 alt2"><code class="lua keyword">end</code></div>
<div class="line number52 index51 alt1"> </div>
<div class="line number53 index52 alt2"> </div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"> </div>
<div class="line number56 index55 alt1"> </div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"> </div>
<div class="line number59 index58 alt2"> </div>
<div class="line number60 index59 alt1"><code class="lua keyword">end</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p>AB.BC.CD.Z對應為軸的名稱</p>
<p><span>moving(0.2,0.7)、moving(-0.3,-0.55)為指定位置</span></p>
</div>
</div>
<p><br/><span>5.Python remote API 逆向運動學函式</span><br/><span>操作影片:<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VwWsI3xD43U" title="YouTube video player" width="560"></iframe></span></p>
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">sim as vrep</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">import</code> <code class="py plain">random</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">time</code></div>
<div class="line number5 index4 alt2"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="py keyword">def</code> <code class="py plain">moving(x,y):</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">       </code><code class="py plain">a</code><code class="py keyword">=</code><code class="py value">0.5</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">       </code><code class="py plain">b</code><code class="py keyword">=</code><code class="py value">0.5</code></div>
<div class="line number10 index9 alt1"><code class="py spaces">       </code><code class="py plain">c</code><code class="py keyword">=</code><code class="py plain">math.</code><code class="py functions">pow</code><code class="py plain">((math.</code><code class="py functions">pow</code><code class="py plain">(x,</code><code class="py value">2</code><code class="py plain">)</code><code class="py keyword">+</code><code class="py plain">math.</code><code class="py functions">pow</code><code class="py plain">(y,</code><code class="py value">2</code><code class="py plain">)),</code><code class="py value">0.5</code><code class="py plain">)</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">       </code><code class="py plain">s</code><code class="py keyword">=</code><code class="py plain">(a</code><code class="py keyword">+</code><code class="py plain">b</code><code class="py keyword">+</code><code class="py plain">c)</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">       </code><code class="py plain">area</code><code class="py keyword">=</code><code class="py plain">math.</code><code class="py functions">pow</code><code class="py plain">((s</code><code class="py keyword">*</code><code class="py plain">(s</code><code class="py keyword">-</code><code class="py plain">a)</code><code class="py keyword">*</code><code class="py plain">(s</code><code class="py keyword">-</code><code class="py plain">b)</code><code class="py keyword">*</code><code class="py plain">(s</code><code class="py keyword">-</code><code class="py plain">c)),</code><code class="py value">0.5</code><code class="py plain">)</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">       </code><code class="py plain">h</code><code class="py keyword">=</code><code class="py plain">area</code><code class="py keyword">/</code><code class="py plain">(</code><code class="py value">2</code><code class="py keyword">*</code><code class="py plain">c)</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">       </code><code class="py plain">deg1_base</code><code class="py keyword">=</code><code class="py plain">math.atan(x</code><code class="py keyword">/</code><code class="py plain">y)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">       </code><code class="py keyword">if</code> <code class="py plain">x&lt;</code><code class="py value">0</code> <code class="py keyword">and</code> <code class="py plain">y&lt;</code><code class="py value">0</code> <code class="py plain">:</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">                </code><code class="py plain">deg1_base</code><code class="py keyword">=</code><code class="py plain">deg1_base</code><code class="py keyword">+</code><code class="py plain">math.pi</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">       </code><code class="py plain">deg1_tri</code><code class="py keyword">=</code><code class="py plain">math.asin(h</code><code class="py keyword">/</code><code class="py plain">a)</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">       </code><code class="py plain">deg1</code><code class="py keyword">=</code><code class="py plain">deg1_base</code><code class="py keyword">+</code><code class="py plain">deg1_tri</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">       </code><code class="py plain">deg2</code><code class="py keyword">=</code><code class="py plain">math.pi</code><code class="py keyword">-</code><code class="py plain">(</code><code class="py value">0.5</code><code class="py keyword">*</code><code class="py plain">math.pi</code><code class="py keyword">-</code><code class="py plain">deg1_tri)</code><code class="py keyword">-</code><code class="py plain">math.acos(h</code><code class="py keyword">/</code><code class="py plain">b)</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">       </code><code class="py plain">deg3</code><code class="py keyword">=</code><code class="py plain">deg2</code><code class="py keyword">-</code><code class="py plain">deg1</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">       </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,joint1,deg1,opmode)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">       </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,joint2,</code><code class="py keyword">-</code> <code class="py plain">deg2,opmode)</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">       </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,joint3,deg3,opmode)</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'Start'</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py spaces"> </code> </div>
<div class="line number29 index28 alt2"><code class="py plain">vrep.simxFinish(</code><code class="py keyword">-</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number30 index29 alt1"><code class="py spaces"> </code> </div>
<div class="line number31 index30 alt2"><code class="py plain">clientID </code><code class="py keyword">=</code> <code class="py plain">vrep.simxStart(</code><code class="py string">'127.0.0.1'</code><code class="py plain">, </code><code class="py value">19997</code><code class="py plain">, </code><code class="py color1">True</code><code class="py plain">, </code><code class="py color1">True</code><code class="py plain">, </code><code class="py value">5000</code><code class="py plain">, </code><code class="py value">5</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">  </code> </div>
<div class="line number33 index32 alt2"><code class="py keyword">if</code> <code class="py plain">clientID !</code><code class="py keyword">=</code> <code class="py keyword">-</code><code class="py value">1</code><code class="py plain">:</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py functions">print</code> <code class="py plain">(</code><code class="py string">'Connected to remote API server'</code><code class="py plain">)</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">      </code> </div>
<div class="line number36 index35 alt1"><code class="py spaces">    </code><code class="py plain">res </code><code class="py keyword">=</code> <code class="py plain">vrep.simxAddStatusbarMessage(</code></div>
<div class="line number37 index36 alt2"><code class="py spaces">        </code><code class="py plain">clientID, </code><code class="py string">"This is teach by 40823214 "</code><code class="py plain">,</code></div>
<div class="line number38 index37 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simx_opmode_oneshot)</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py plain">res </code><code class="py keyword">not</code> <code class="py keyword">in</code> <code class="py plain">(vrep.simx_return_ok, vrep.simx_return_novalue_flag):</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">        </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"Could not add a message to the status bar."</code><code class="py plain">)</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">  </code> </div>
<div class="line number42 index41 alt1"><code class="py spaces">     </code> </div>
<div class="line number43 index42 alt2"><code class="py spaces">    </code><code class="py plain">opmode </code><code class="py keyword">=</code> <code class="py plain">vrep.simx_opmode_oneshot_wait</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">    </code><code class="py plain">STREAMING </code><code class="py keyword">=</code> <code class="py plain">vrep.simx_opmode_streaming</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">  </code> </div>
<div class="line number46 index45 alt1"><code class="py spaces">     </code> </div>
<div class="line number47 index46 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxStartSimulation(clientID, opmode)</code></div>
<div class="line number48 index47 alt1"><code class="py spaces">    </code><code class="py plain">ret,AB</code><code class="py keyword">=</code><code class="py plain">vrep.simxGetObjectHandle(clientID,</code><code class="py string">"AB"</code><code class="py plain">,opmode)</code></div>
<div class="line number49 index48 alt2"><code class="py spaces">    </code><code class="py plain">ret,BC</code><code class="py keyword">=</code><code class="py plain">vrep.simxGetObjectHandle(clientID,</code><code class="py string">"BC"</code><code class="py plain">,opmode)</code></div>
<div class="line number50 index49 alt1"><code class="py spaces">    </code><code class="py plain">ret,CD</code><code class="py keyword">=</code><code class="py plain">vrep.simxGetObjectHandle(clientID,</code><code class="py string">"CD"</code><code class="py plain">,opmode)</code></div>
<div class="line number51 index50 alt2"><code class="py spaces">    </code><code class="py plain">ret,Z</code><code class="py keyword">=</code><code class="py plain">vrep.simxGetObjectHandle(clientID,</code><code class="py string">"Z"</code><code class="py plain">,opmode)</code></div>
<div class="line number52 index51 alt1"><code class="py spaces">    </code> </div>
<div class="line number53 index52 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>AB</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number54 index53 alt1"><code class="py spaces">    </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>BC</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number55 index54 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>CD</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number56 index55 alt1"><code class="py spaces">    </code><code class="py plain">vrep.simxSetIntegerSignal(clientID,</code><code class="py string">"pad_switch"</code><code class="py plain">,</code><code class="py value">1</code><code class="py plain">,opmode)</code></div>
<div class="line number57 index56 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py keyword">-</code><code class="py value">0.09</code><code class="py plain">,opmode)</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">    </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py keyword">while</code> <code class="py color1">True</code><code class="py plain">:</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">        </code><code class="py plain">moving(</code><code class="py value">0.2</code><code class="py plain">,</code><code class="py value">0.7</code><code class="py plain">)</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">        </code><code class="py plain">vrep.simxSetIntegerSignal(clientID,</code><code class="py string">"pad_switch"</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">        </code><code class="py plain">vrep.simxSetIntegerSignal(clientID,</code><code class="py string">"pad_switch"</code><code class="py plain">,</code><code class="py value">1</code><code class="py plain">,opmode)</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py keyword">-</code><code class="py value">0.09</code><code class="py plain">,opmode)</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">        </code><code class="py plain">moving(</code><code class="py keyword">-</code><code class="py value">0.3</code><code class="py plain">,</code><code class="py keyword">-</code><code class="py value">0.55</code><code class="py plain">)</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">        </code><code class="py plain">vrep.simxSetIntegerSignal(clientID,</code><code class="py string">"pad_switch"</code><code class="py plain">,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">        </code><code class="py plain">vrep.simxSetIntegerSignal(clientID,</code><code class="py string">"pad_switch"</code><code class="py plain">,</code><code class="py value">1</code><code class="py plain">,opmode)</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py keyword">-</code><code class="py value">0.09</code><code class="py plain">,opmode)</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">        </code><code class="py plain">time.sleep(</code><code class="py value">1</code><code class="py plain">)</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">        </code><code class="py plain">vrep.simxSetJointTargetPosition(clientID,<span>Z</span>,</code><code class="py value">0</code><code class="py plain">,opmode)</code></div>
<div class="line number76 index75 alt1"><code class="py plain"></code></div>
<div class="line number76 index75 alt1"><code class="py plain">心得:</code></div>
<div class="line number76 index75 alt1"><span face="monospace" style="font-family: monospace;">在這次考試前，我對onshape還不熟，因為平時都是使用inventor，藉由這次的考試讓我對這個免費的網頁繪圖更加的熟悉，再多次操作後，對其相關的功能運用更加的了解</span></div>
<div class="line number76 index75 alt1"><span face="monospace" style="font-family: monospace;">再先前小組分組中雖然有操作<span>CoppeliaSim的經驗，但當時使用到的機構比較少也沒接觸到程式的部分，但在這次的考試，我對於軟體的機構有更深入的認識，也因為製作的過程失敗很多次，所以我在最後成功組裝零件只需要花費不到10分鐘就可以完成，但仍有其他需要學習的機構</span></span></div>
<div class="line number76 index75 alt1"><span face="monospace" style="font-family: monospace;"><span>但程式碼的部分是在同學分享的影片中學習到的，且還沒有很熟悉，希望自己可以增強程式方面的運用</span></span></div>
<div class="line number76 index75 alt1"><span face="monospace" style="font-family: monospace;"><span>謝謝老師與同學的影片幫助，讓我在家裡也可以播放影片學習</span></span></div>